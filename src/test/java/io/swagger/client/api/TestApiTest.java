/*
 * API для приложения для тестирования
 * Описание API для приложения для тестирования
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Answer;
import io.swagger.client.model.Exception;
import io.swagger.client.model.Question;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TestApi
 */
@Ignore
public class TestApiTest {

    private final TestApi api = new TestApi();

    
    /**
     * конец теста и получение результата
     *
     * метод предназначен для завершения теста
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void finishTestTest() throws ApiException {
        Integer userUuid = null;
        Long testId = null;
        Integer response = api.finishTest(userUuid, testId);

        // TODO: test validations
    }
    
    /**
     * получение последнего результата
     *
     * метод предназначен для получения списка всех операций
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLastResultTest() throws ApiException {
        Integer userUuid = null;
        Integer response = api.getLastResult(userUuid);

        // TODO: test validations
    }
    
    /**
     * получить вопрос и варианты ответа
     *
     * метод предназначен для получения вариантов ответа
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTestAnswerTest() throws ApiException {
        Integer userUuid = null;
        Long testId = null;
        Integer questionId = null;
        Question response = api.getTestAnswer(userUuid, testId, questionId);

        // TODO: test validations
    }
    
    /**
     * отправить ответ
     *
     * метод предназначен для отправления ответа на вопрос
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTestAnswerTest() throws ApiException {
        Integer userUuid = null;
        Long testId = null;
        Integer questionId = null;
        Integer answerId = null;
        Answer response = api.postTestAnswer(userUuid, testId, questionId, answerId);

        // TODO: test validations
    }
    
    /**
     * запуск теста и получение количества вопросов
     *
     * метод предназначен для запуска теста и получения количества вопросов
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startTestTest() throws ApiException {
        Integer userUuid = null;
        Long testId = null;
        Integer response = api.startTest(userUuid, testId);

        // TODO: test validations
    }
    
}
